#!/usr/bin/env bash
set -Eeuo pipefail
START_TIME=$(date +%s.%N)

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR/.."

echo "ðŸ”¨ Building app..."

# Build iPhone app for simulator
# Use SIMULATOR_UDID env var if set, otherwise use any available simulator
SIMULATOR_UDID="${SIMULATOR_UDID:-$(xcrun simctl list devices booted iPhone | grep -o '[A-F0-9]\{8\}-[A-F0-9]\{4\}-[A-F0-9]\{4\}-[A-F0-9]\{4\}-[A-F0-9]\{12\}' | head -1)}"

if [ -z "$SIMULATOR_UDID" ]; then
    # No booted simulator, use any available iPhone simulator
    SIMULATOR_UDID=$(xcrun simctl list devices available iPhone | grep -o '[A-F0-9]\{8\}-[A-F0-9]\{4\}-[A-F0-9]\{4\}-[A-F0-9]\{4\}-[A-F0-9]\{12\}' | head -1)
fi

xcodebuild \
    -project RealityKitApp.xcodeproj \
    -scheme RealityKitApp \
    -configuration Debug \
    -destination "platform=iOS Simulator,arch=arm64,id=$SIMULATOR_UDID" \
    -derivedDataPath "$PWD/.DerivedData" \
    -parallelizeTargets \
    -jobs "$(sysctl -n hw.ncpu)" \
    CODE_SIGNING_ALLOWED=NO \
    -quiet \
    build

END_TIME=$(date +%s.%N)
ELAPSED_TIME=$(echo "$END_TIME - $START_TIME" | bc --mathlib | xargs printf "%.2f\n")
echo "âœ… Build completed in $ELAPSED_TIME seconds!"
